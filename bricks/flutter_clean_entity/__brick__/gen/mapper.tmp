import 'package:${projectName}/core/arch/domain/common/converter/mapper.dart';
import 'package:${projectName}/data/model/remote/${sourceName.snakeCase}/${className.snakeCase}/${className.snakeCase}_request.dart';
import 'package:${projectName}/data/model/remote/${sourceName.snakeCase}/${className.snakeCase}/${className.snakeCase}_response.dart';
import 'package:${projectName}/domain/entity/${sourceName.snakeCase}/${className.snakeCase}/${className.snakeCase}_entity.dart';

class ${className.pascalCase}Mappers {
  final _${className.camelCase}ResponseToEntityMapper = _${className.pascalCase}ResponseToEntityMapper();
  final _${className.camelCase}EntityToRequestMapper = _${className.pascalCase}EntityToRequestMapper();

  ${className.pascalCase}Entity map${className.pascalCase}ResponseToEntity(${className.pascalCase}Response response) =>
      _${className.camelCase}ResponseToEntityMapper.map(response);

  ${className.pascalCase}Request map${className.pascalCase}EntityToRequest(${className.pascalCase}Entity entity) =>
      _${className.camelCase}EntityToRequestMapper.map(entity);
}

class _${className.pascalCase}ResponseToEntityMapper implements Mapper<${className.pascalCase}Response, ${className.pascalCase}Entity>{
  @override
  ${className.pascalCase}Entity map(${className.pascalCase}Response from) {
    return ${className.pascalCase}Entity(
        name: from.name ?? '',
    );
  } 
}

class _${className.pascalCase}EntityToRequestMapper implements Mapper<${className.pascalCase}Entity, ${className.pascalCase}Request>{
  @override
  ${className.pascalCase}Request map(${className.pascalCase}Entity from) {
    return ${className.pascalCase}Request(
        name: from.name,
    );
  }
}